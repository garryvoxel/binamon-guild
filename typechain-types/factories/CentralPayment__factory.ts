/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CentralPayment,
  CentralPaymentInterface,
} from "../CentralPayment";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bmonVbnb",
        type: "address",
      },
      {
        internalType: "address",
        name: "bnbVbusd",
        type: "address",
      },
      {
        internalType: "address",
        name: "bmoncAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BMONC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BMON_V_BNB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BNB_V_BUSD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addTrusted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guildOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_parentA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_parentB",
        type: "address",
      },
      {
        internalType: "address",
        name: "_referral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "breedFee",
        type: "uint256",
      },
    ],
    name: "distributeForBreedFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBmonUsdPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bmonUSDPrice",
        type: "uint256",
      },
    ],
    name: "getGenesisMonsterPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "genesisMonsters",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lockingBmonAmount",
        type: "uint256",
      },
    ],
    name: "getGuildOwnerMintAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeTrusted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boosterPrice",
        type: "uint256",
      },
    ],
    name: "setBoosterPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_bfPercent",
        type: "uint256[]",
      },
    ],
    name: "setBreedFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplier",
        type: "uint256",
      },
    ],
    name: "setMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052601b6003556103e86004553480156200001c57600080fd5b5060405162001803380380620018038339810160408190526200003f9162000097565b600080546001600160a01b03191633179055606092831b6001600160601b031990811660805291831b821660a05290911b1660c052620000e0565b80516001600160a01b03811681146200009257600080fd5b919050565b600080600060608486031215620000ac578283fd5b620000b7846200007a565b9250620000c7602085016200007a565b9150620000d7604085016200007a565b90509250925092565b60805160601c60a05160601c60c05160601c6116d56200012e6000396000818161015b01526107f801526000818161019701526105c301526000818161011c015261051801526116d56000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806380b956831161008c578063d55e62a011610066578063d55e62a014610219578063f2fde38b1461022c578063f3b4658f1461023f578063fc2635541461025257600080fd5b806380b95683146101e25780638da5cb5b146101f5578063d4d0d6e61461020657600080fd5b8063641579a6116100c8578063641579a61461017d5780636438d1f6146101925780637b9479f0146101b95780637d0a76c3146101cf57600080fd5b80630ea703e0146100ef5780631dc5d4c61461011757806347eddb2b14610156575b600080fd5b6101026100fd3660046111b1565b610265565b60405190151581526020015b60405180910390f35b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010e565b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b61019061018b3660046113bf565b6104b9565b005b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b6101c1610511565b60405190815260200161010e565b6101c16101dd3660046113d7565b6106be565b6101c16101f036600461123f565b610b5c565b6000546001600160a01b031661013e565b610190610214366004611190565b610c51565b610190610227366004611190565b610ca2565b61019061023a366004611190565b610ced565b61019061024d36600461120c565b610d8f565b6101906102603660046113bf565b610da6565b6000806102cb60058054806020026020016040519081016040528092919081815260200182805480156102b757602002820191906000526020600020905b8154815260200190600101908083116102a3575b505050505084610df590919063ffffffff16565b9050806000815181106102ee57634e487b7160e01b600052603260045260246000fd5b602002602001015160026000896001600160a01b03166001600160a01b031681526020019081526020016000206000015461032991906114ff565b6001600160a01b03881660009081526002602052604090205580518190600190811061036557634e487b7160e01b600052603260045260246000fd5b602002602001015160026000886001600160a01b03166001600160a01b03168152602001908152602001600020600001546103a091906114ff565b6001600160a01b038716600090815260026020819052604090912091909155815182919081106103e057634e487b7160e01b600052603260045260246000fd5b602002602001015160026000876001600160a01b03166001600160a01b031681526020019081526020016000206000015461041b91906114ff565b6001600160a01b03861660009081526002602052604090205580518190600390811061045757634e487b7160e01b600052603260045260246000fd5b602002602001015160026000866001600160a01b03166001600160a01b031681526020019081526020016000206000015461049291906114ff565b6001600160a01b038516600090815260026020526040902055506001905095945050505050565b3360009081526001602081905260409091205460ff16151514806104e757506000546001600160a01b031633145b61050c5760405162461bcd60e51b81526004016105039061142f565b60405180910390fd5b600355565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561056f57600080fd5b505afa158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a79190611371565b506001600160701b031691506001600160701b031691506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561061a57600080fd5b505afa15801561062e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106529190611371565b506001600160701b0391821693501690506012841580610670575082155b156106815760009550505050505090565b61068b8386611622565b61069682600a61157a565b6106a08487611622565b6106aa9190611622565b6106b49190611517565b9550505050505090565b60008060405180610180016040528061817e8152602001614e208152602001613a9881526020016127108152602001611f4081526020016117708152602001610fa081526020016107d081526020016103e881526020016101f4815260200160fa815260200160648152509050600060405180610180016040528061847b8152602001614e208152602001613a9881526020016127108152602001611f4081526020016117708152602001610fa081526020016107d081526020016103e881526020016032815260200160198152602001600a815250905060006040518061014001604052806175308152602001614e208152602001613a9881526020016127108152602001611f40815260200161177081526020016113888152602001610bb881526020016107d081526020016103e8815250905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fc314e31886040518263ffffffff1660e01b815260040161084491815260200190565b60006040518083038186803b15801561085c57600080fd5b505afa158015610870573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108989190810190611282565b50905060006103e8905081602001516003815181106108c757634e487b7160e01b600052603260045260246000fd5b6020026020010151600114156108e057506188b86109d4565b816020015160038151811061090557634e487b7160e01b600052603260045260246000fd5b60200260200101516002141561091e57506161a86109d4565b816020015160038151811061094357634e487b7160e01b600052603260045260246000fd5b60200260200101516003141561095c5750614e206109d4565b816020015160038151811061098157634e487b7160e01b600052603260045260246000fd5b60200260200101516004141561099a5750613a986109d4565b81602001516003815181106109bf57634e487b7160e01b600052603260045260246000fd5b6020026020010151600514156109d45750610fa05b83600183602001516000815181106109fc57634e487b7160e01b600052603260045260246000fd5b6020026020010151610a0e9190611641565b600c8110610a2c57634e487b7160e01b600052603260045260246000fd5b60200201518360018460200151600281518110610a5957634e487b7160e01b600052603260045260246000fd5b6020026020010151610a6b9190611641565b600a8110610a8957634e487b7160e01b600052603260045260246000fd5b60200201518660018560200151600181518110610ab657634e487b7160e01b600052603260045260246000fd5b6020026020010151610ac89190611641565b600c8110610ae657634e487b7160e01b600052603260045260246000fd5b6020020151610af59084611622565b610aff9190611622565b610b099190611622565b610b1590610bb8611622565b6003548860045468056bc75e2d63100000610b309190611622565b610b3a9190611622565b610b449190611622565b610b4e9190611517565b955050505050505b92915050565b33600090815260016020819052604082205460ff1615151480610b8957506000546001600160a01b031633145b610ba55760405162461bcd60e51b81526004016105039061142f565b6000610baf610511565b905060005b8451811015610c0c57610bee858281518110610be057634e487b7160e01b600052603260045260246000fd5b6020026020010151836106be565b610bf890846114ff565b925080610c0481611658565b915050610bb4565b50610c20826815af1d78b58c4000006114ff565b9150670de0b6b3a7640000610c358285611622565b610c3f9190611517565b610c4990836114ff565b949350505050565b6000546001600160a01b03163314610c7b5760405162461bcd60e51b8152600401610503906113f8565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b03163314610ccc5760405162461bcd60e51b8152600401610503906113f8565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b03163314610d175760405162461bcd60e51b8152600401610503906113f8565b6001600160a01b038116610d6d5760405162461bcd60e51b815260206004820152601d60248201527f4e6577206f776e657220697320746865207a65726f20616464726573730000006044820152606401610503565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b8051610da2906005906020840190610f4e565b5050565b3360009081526001602081905260409091205460ff1615151480610dd457506000546001600160a01b031633145b610df05760405162461bcd60e51b81526004016105039061142f565b600455565b6060600082516001610e0791906114ff565b67ffffffffffffffff811115610e2d57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610e56578160200160208202803683370190505b5090508360005b8451811015610f18576064858281518110610e8857634e487b7160e01b600052603260045260246000fd5b602002602001015187610e9b9190611622565b610ea59190611517565b838281518110610ec557634e487b7160e01b600052603260045260246000fd5b602002602001018181525050828181518110610ef157634e487b7160e01b600052603260045260246000fd5b602002602001015182610f049190611641565b915080610f1081611658565b915050610e5d565b508082855181518110610f3b57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152509392505050565b828054828255906000526020600020908101928215610f89579160200282015b82811115610f89578251825591602001919060010190610f6e565b50610f95929150610f99565b5090565b5b80821115610f955760008155600101610f9a565b80356001600160a01b0381168114610fc557600080fd5b919050565b600082601f830112610fda578081fd5b81356020610fef610fea836114db565b6114aa565b80838252828201915082860187848660051b890101111561100e578586fd5b855b8581101561102c57813584529284019290840190600101611010565b5090979650505050505050565b600082601f830112611049578081fd5b815167ffffffffffffffff81111561106357611063611689565b6020611077601f8301601f191682016114aa565b828152858284870101111561108a578384fd5b835b838110156110a757858101830151828201840152820161108c565b838111156110b757848385840101525b5095945050505050565b6000608082840312156110d2578081fd5b6110da61145e565b9050815167ffffffffffffffff808211156110f457600080fd5b61110085838601611039565b8352602084015191508082111561111657600080fd5b61112285838601611039565b6020840152604084015191508082111561113b57600080fd5b61114785838601611039565b6040840152606084015191508082111561116057600080fd5b5061116d84828501611039565b60608301525092915050565b80516001600160701b0381168114610fc557600080fd5b6000602082840312156111a1578081fd5b6111aa82610fae565b9392505050565b600080600080600060a086880312156111c8578081fd5b6111d186610fae565b94506111df60208701610fae565b93506111ed60408701610fae565b92506111fb60608701610fae565b949793965091946080013592915050565b60006020828403121561121d578081fd5b813567ffffffffffffffff811115611233578182fd5b610c4984828501610fca565b60008060408385031215611251578182fd5b823567ffffffffffffffff811115611267578283fd5b61127385828601610fca565b95602094909401359450505050565b60008060408385031215611294578182fd5b825167ffffffffffffffff808211156112ab578384fd5b90840190604082870312156112be578384fd5b6112c6611487565b82518152602080840151838111156112dc578687fd5b80850194505087601f8501126112f0578586fd5b83516112fe610fea826114db565b8082825283820191508387018b858560051b8a0101111561131d57898afd5b8997505b8388101561133f578051835260019790970196918401918401611321565b5084840152505086015190945091508082111561135a578283fd5b50611367858286016110c1565b9150509250929050565b600080600060608486031215611385578283fd5b61138e84611179565b925061139c60208501611179565b9150604084015163ffffffff811681146113b4578182fd5b809150509250925092565b6000602082840312156113d0578081fd5b5035919050565b600080604083850312156113e9578182fd5b50508035926020909101359150565b60208082526017908201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b60208082526015908201527410d85b1b195c881a5cc81b9bdd081d1c9d5cdd1959605a1b604082015260600190565b6040516080810167ffffffffffffffff8111828210171561148157611481611689565b60405290565b6040805190810167ffffffffffffffff8111828210171561148157611481611689565b604051601f8201601f1916810167ffffffffffffffff811182821017156114d3576114d3611689565b604052919050565b600067ffffffffffffffff8211156114f5576114f5611689565b5060051b60200190565b6000821982111561151257611512611673565b500190565b60008261153257634e487b7160e01b81526012600452602481fd5b500490565b600181815b8085111561157257816000190482111561155857611558611673565b8085161561156557918102915b93841c939080029061153c565b509250929050565b60006111aa838360008261159057506001610b56565b8161159d57506000610b56565b81600181146115b357600281146115bd576115d9565b6001915050610b56565b60ff8411156115ce576115ce611673565b50506001821b610b56565b5060208310610133831016604e8410600b84101617156115fc575081810a610b56565b6116068383611537565b806000190482111561161a5761161a611673565b029392505050565b600081600019048311821515161561163c5761163c611673565b500290565b60008282101561165357611653611673565b500390565b600060001982141561166c5761166c611673565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e7c165a6a589bde1239ea4cf9712e1b9b270304e9a904946c81e6908729dc02164736f6c63430008040033";

type CentralPaymentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CentralPaymentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CentralPayment__factory extends ContractFactory {
  constructor(...args: CentralPaymentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CentralPayment";
  }

  deploy(
    bmonVbnb: string,
    bnbVbusd: string,
    bmoncAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CentralPayment> {
    return super.deploy(
      bmonVbnb,
      bnbVbusd,
      bmoncAddress,
      overrides || {}
    ) as Promise<CentralPayment>;
  }
  getDeployTransaction(
    bmonVbnb: string,
    bnbVbusd: string,
    bmoncAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bmonVbnb,
      bnbVbusd,
      bmoncAddress,
      overrides || {}
    );
  }
  attach(address: string): CentralPayment {
    return super.attach(address) as CentralPayment;
  }
  connect(signer: Signer): CentralPayment__factory {
    return super.connect(signer) as CentralPayment__factory;
  }
  static readonly contractName: "CentralPayment";
  public readonly contractName: "CentralPayment";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CentralPaymentInterface {
    return new utils.Interface(_abi) as CentralPaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CentralPayment {
    return new Contract(address, _abi, signerOrProvider) as CentralPayment;
  }
}
