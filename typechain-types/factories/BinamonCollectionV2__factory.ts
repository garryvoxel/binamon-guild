/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BinamonCollectionV2,
  BinamonCollectionV2Interface,
} from "../BinamonCollectionV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addTrusted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "extra",
        type: "string",
      },
      {
        internalType: "string",
        name: "info",
        type: "string",
      },
    ],
    name: "addType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "arrestToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "type_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "edit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "type_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "hash",
        type: "string",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "extra",
        type: "string",
      },
      {
        internalType: "string",
        name: "info",
        type: "string",
      },
    ],
    name: "editType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getBanFlags",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDelegates",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user1",
        type: "address",
      },
      {
        internalType: "address",
        name: "user2",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isBanned",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isTrusted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "type_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paramNames",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "regenToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "regenTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeTrusted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "banList",
        type: "address",
      },
    ],
    name: "setAddressBanList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setArrestAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "set",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "unset",
        type: "uint256[]",
      },
    ],
    name: "setBanFlags",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "banList",
        type: "address",
      },
    ],
    name: "setLegacyBanList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "types_",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "legacyTypes",
        type: "uint256[]",
      },
    ],
    name: "setLegacyTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "_type",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "paramValues",
            type: "uint256[]",
          },
        ],
        internalType: "struct BinamonTokenV2",
        name: "token",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "_hash",
            type: "string",
          },
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_extra",
            type: "string",
          },
          {
            internalType: "string",
            name: "_info",
            type: "string",
          },
        ],
        internalType: "struct BinamonTypeV2",
        name: "type_",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTypes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "typeByIndex",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "_hash",
            type: "string",
          },
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "string",
            name: "_extra",
            type: "string",
          },
          {
            internalType: "string",
            name: "_info",
            type: "string",
          },
        ],
        internalType: "struct BinamonTypeV2",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526003805460ff191690553480156200001b57600080fd5b5060008054336001600160a01b0319918216811783556015928355600f8054909216179055604080518082019091528181527f68747470733a2f2f697066732e696f2f697066732f00000000000000000000006020909101908152620000859160149190620000bb565b50604051600090339082907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46200019e565b828054620000c99062000161565b90600052602060002090601f016020900481019282620000ed576000855562000138565b82601f106200010857805160ff191683800117855562000138565b8280016001018555821562000138579182015b82811115620001385782518255916020019190600101906200011b565b50620001469291506200014a565b5090565b5b808211156200014657600081556001016200014b565b600181811c908216806200017657607f821691505b602082108114156200019857634e487b7160e01b600052602260045260246000fd5b50919050565b61345880620001ae6000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80636352211e11610151578063ad452d39116100c3578063d4d0d6e611610087578063d4d0d6e614610574578063d55e62a014610587578063e985e9c51461059a578063f15df2e5146105ad578063f2fde38b146105b5578063fc314e31146105c857600080fd5b8063ad452d3914610513578063b88d4fde14610526578063bc8def3214610539578063c838ccb61461054c578063c87b56dd1461056157600080fd5b806395d89b411161011557806395d89b411461049157806396d648791461049957806397f8f33b146104c557806399cb2e11146104d8578063a22cb465146104ed578063a3b573241461050057600080fd5b80636352211e1461043f57806367c7d6ad1461045257806370a08231146104655780638456cb59146104785780638da5cb5b1461048057600080fd5b8063344d45cb116101ea5780633f4ba83a116101ae5780633f4ba83a146103e657806342842e0e1461031b5780634f6ccce7146103ee5780635abbf89e146104015780635b7852c9146104125780635c975abb1461043257600080fd5b8063344d45cb1461037a57806335183e501461038d57806338995f8a146103a0578063397ec488146103b35780633c718709146103d357600080fd5b806318160ddd1161023c57806318160ddd1461030957806323b872dd1461031b578063264838cf1461032e5780632d69044f146103415780632f745c591461035457806330176e131461036757600080fd5b806301ffc9a71461027957806302928e52146102a157806306fdde03146102b6578063081812fc146102cb578063095ea7b3146102f6575b600080fd5b61028c610287366004612d0f565b6105e9565b60405190151581526020015b60405180910390f35b6102b46102af366004612bde565b61063b565b005b6102be6106a5565b6040516102989190613154565b6102de6102d9366004612e10565b610737565b6040516001600160a01b039091168152602001610298565b6102b4610304366004612bb5565b610790565b6006545b604051908152602001610298565b6102b4610329366004612aaf565b610918565b6102b461033c366004612f13565b61094e565b6102b461034f366004612e28565b610a5f565b61030d610362366004612bb5565b610c11565b6102b4610375366004612d37565b610c72565b6102b4610388366004612a63565b610cf4565b6102b461039b366004612a63565b610d55565b61028c6103ae366004612aaf565b610de6565b61030d6103c1366004612e10565b60009081526010602052604090205490565b6102b46103e1366004612c70565b610fef565b6102b46111d0565b61030d6103fc366004612e10565b61122a565b6102b461040f366004612e10565b50565b610425610420366004612e10565b611280565b60405161029891906132b6565b60035461028c9060ff1681565b6102de61044d366004612e10565b61156b565b6102b4610460366004612c10565b611586565b61030d610473366004612a63565b611688565b6102b4611707565b6000546001600160a01b03166102de565b6102be611765565b61028c6104a7366004612a63565b6001600160a01b031660009081526001602052604090205460ff1690565b6102b46104d3366004612a63565b611774565b6104e0611805565b60405161029891906130f3565b6102b46104fb366004612b7f565b6118de565b6102b461050e366004612d69565b6119c8565b6102b4610521366004612e10565b611af3565b6102b4610534366004612aea565b611b7e565b6102b4610547366004612e62565b611baf565b610554611cc6565b60405161029891906130a6565b6102be61056f366004612e10565b611d27565b6102b4610582366004612a63565b611d90565b6102b4610595366004612a63565b611e1e565b61028c6105a8366004612a7d565b611e69565b60155461030d565b6102b46105c3366004612a63565b611e97565b6105db6105d6366004612e10565b611f39565b604051610298929190613245565b60006001600160e01b031982166380ac58cd60e01b148061061a57506001600160e01b03198216635b5e139f60e01b145b8061063557506001600160e01b031982166301ffc9a760e01b145b92915050565b60035460ff16158061065757506000546001600160a01b031633145b61066057600080fd5b60005b815181101561068f5761069382828151811061068f57634e487b7160e01b600052603260045260246000fd5b5050565b8061069d816133a3565b915050610663565b6060600480546106b490613368565b80601f01602080910402602001604051908101604052809291908181526020018280546106e090613368565b801561072d5780601f106107025761010080835404028352916020019161072d565b820191906000526020600020905b81548152906001019060200180831161071057829003601f168201915b5050505050905090565b6000818152600960205260408120546001600160a01b03166107745760405162461bcd60e51b815260040161076b9061321a565b60405180910390fd5b506000908152600a60205260409020546001600160a01b031690565b60035460ff1615806107ac57506000546001600160a01b031633145b6107b557600080fd5b60006107c08261156b565b9050806001600160a01b0316836001600160a01b031614156108245760405162461bcd60e51b815260206004820152601960248201527f417070726f76616c20746f2063757272656e74206f776e657200000000000000604482015260640161076b565b336001600160a01b038216148061084057506108408133611e69565b6108a95760405162461bcd60e51b815260206004820152603460248201527f417070726f76652063616c6c6572206973206e656974686572206f776e6572206044820152731b9bdc88185c1c1c9bdd995908199bdc88185b1b60621b606482015260840161076b565b6000828152600a6020526040902080546001600160a01b0319166001600160a01b03851690811790915582906108de8261156b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6109223382612292565b61093e5760405162461bcd60e51b815260040161076b9061319e565b610949838383612324565b505050565b3360009081526001602081905260409091205460ff161515148061097c57506000546001600160a01b031633145b6109985760405162461bcd60e51b815260040161076b906131eb565b60035460ff1615806109b457506000546001600160a01b031633145b6109bd57600080fd5b6000821180156109cf57506015548211155b610a315760405162461bcd60e51b815260206004820152602d60248201527f547279696e6720746f206368616e676520746f206e6f6e6578697374656e742060448201526c3a3cb8329037b3103a37b5b2b760991b606482015260840161076b565b60008381526017602090815260409091208381558251610a5992600190920191840190612888565b50505050565b3360009081526001602081905260409091205460ff1615151480610a8d57506000546001600160a01b031633145b610aa95760405162461bcd60e51b815260040161076b906131eb565b60035460ff161580610ac557506000546001600160a01b031633145b610ace57600080fd5b600082118015610ae057506015548211155b610b3d5760405162461bcd60e51b815260206004820152602860248201527f547279696e6720746f206d696e74206e6f6e6578697374656e7420747970652060448201526737b3103a37b5b2b760c11b606482015260840161076b565b601854815114610b8f5760405162461bcd60e51b815260206004820152601a60248201527f496e636f7272656374206e756d626572206f6620706172616d73000000000000604482015260640161076b565b600160066000828254610ba291906132f9565b9091555050600654610bb433826124c2565b60008181526017602090815260409091208481558351610bdc92600190920191850190612888565b50604051819033906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b6000610c1c83611688565b8210610c2757600080fd5b6001600160a01b0383166000908152600760205260409020805483908110610c5f57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b3360009081526001602081905260409091205460ff1615151480610ca057506000546001600160a01b031633145b610cbc5760405162461bcd60e51b815260040161076b906131eb565b60035460ff161580610cd857506000546001600160a01b031633145b610ce157600080fd5b805161068f9060149060208401906128d3565b6000546001600160a01b03163314610d1e5760405162461bcd60e51b815260040161076b90613167565b600f546001600160a01b0316610d3357600080fd5b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526001602081905260409091205460ff1615151480610d8357506000546001600160a01b031633145b610d9f5760405162461bcd60e51b815260040161076b906131eb565b60035460ff161580610dbb57506000546001600160a01b031633145b610dc457600080fd5b601280546001600160a01b0319166001600160a01b0392909216919091179055565b6013546000906001600160a01b031615610f0e576013546040516397f735d560e01b81526001600160a01b038681166004830152909116906397f735d59060240160206040518083038186803b158015610e3f57600080fd5b505afa158015610e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e779190612cf3565b15610e8457506001610fe8565b6013546040516397f735d560e01b81526001600160a01b038581166004830152909116906397f735d59060240160206040518083038186803b158015610ec957600080fd5b505afa158015610edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f019190612cf3565b15610f0e57506001610fe8565b60008281526011602052604090205460ff16158015610f3757506012546001600160a01b031615155b15610fc5576012546040516362bd4e2b60e11b8152600481018490526001600160a01b039091169063c57a9c569060240160206040518083038186803b158015610f8057600080fd5b505afa158015610f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb89190612cf3565b15610fc557506001610fe8565b600082815260106020526040902054600116610fe2576000610fe5565b60015b90505b9392505050565b6000546001600160a01b031633146110195760405162461bcd60e51b815260040161076b90613167565b60005b8351811015610a595782818151811061104557634e487b7160e01b600052603260045260246000fd5b60200260200101516010600086848151811061107157634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000205417601060008684815181106110ad57634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020819055508181815181106110e757634e487b7160e01b600052603260045260246000fd5b6020026020010151196010600086848151811061111457634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002054166010600086848151811061115057634e487b7160e01b600052603260045260246000fd5b602002602001015181526020019081526020016000208190555060016011600086848151811061119057634e487b7160e01b600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806111c8906133a3565b91505061101c565b6000546001600160a01b031633146111fa5760405162461bcd60e51b815260040161076b90613167565b60035460ff168061121557506000546001600160a01b031633145b61121e57600080fd5b6003805460ff19169055565b600060065482106112755760405162461bcd60e51b8152602060048201526015602482015274496e646578206973206f7574206f662072616e676560581b604482015260640161076b565b6106358260016132f9565b6112ab6040518060800160405280606081526020016060815260200160608152602001606081525090565b60155482106112f45760405162461bcd60e51b8152602060048201526015602482015274496e646578206973206f7574206f662072616e676560581b604482015260640161076b565b601660006113038460016132f9565b815260200190815260200160002060405180608001604052908160008201805461132c90613368565b80601f016020809104026020016040519081016040528092919081815260200182805461135890613368565b80156113a55780601f1061137a576101008083540402835291602001916113a5565b820191906000526020600020905b81548152906001019060200180831161138857829003601f168201915b505050505081526020016001820180546113be90613368565b80601f01602080910402602001604051908101604052809291908181526020018280546113ea90613368565b80156114375780601f1061140c57610100808354040283529160200191611437565b820191906000526020600020905b81548152906001019060200180831161141a57829003601f168201915b5050505050815260200160028201805461145090613368565b80601f016020809104026020016040519081016040528092919081815260200182805461147c90613368565b80156114c95780601f1061149e576101008083540402835291602001916114c9565b820191906000526020600020905b8154815290600101906020018083116114ac57829003601f168201915b505050505081526020016003820180546114e290613368565b80601f016020809104026020016040519081016040528092919081815260200182805461150e90613368565b801561155b5780601f106115305761010080835404028352916020019161155b565b820191906000526020600020905b81548152906001019060200180831161153e57829003601f168201915b5050505050815250509050919050565b6000908152600960205260409020546001600160a01b031690565b3360009081526001602081905260409091205460ff16151514806115b457506000546001600160a01b031633145b6115d05760405162461bcd60e51b815260040161076b906131eb565b60035460ff1615806115ec57506000546001600160a01b031633145b6115f557600080fd5b805182511461160357600080fd5b60005b82518110156109495782818151811061162f57634e487b7160e01b600052603260045260246000fd5b6020026020010151600e600084848151811061165b57634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020819055508080611680906133a3565b915050611606565b60006001600160a01b0382166116eb5760405162461bcd60e51b815260206004820152602260248201527f42616c616e636520717565727920666f7220746865207a65726f206164647265604482015261737360f01b606482015260840161076b565b506001600160a01b03166000908152600b602052604090205490565b6000546001600160a01b031633146117315760405162461bcd60e51b815260040161076b90613167565b60035460ff16158061174d57506000546001600160a01b031633145b61175657600080fd5b6003805460ff19166001179055565b6060600580546106b490613368565b3360009081526001602081905260409091205460ff16151514806117a257506000546001600160a01b031633145b6117be5760405162461bcd60e51b815260040161076b906131eb565b60035460ff1615806117da57506000546001600160a01b031633145b6117e357600080fd5b601380546001600160a01b0319166001600160a01b0392909216919091179055565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156118d557838290600052602060002001805461184890613368565b80601f016020809104026020016040519081016040528092919081815260200182805461187490613368565b80156118c15780601f10611896576101008083540402835291602001916118c1565b820191906000526020600020905b8154815290600101906020018083116118a457829003601f168201915b505050505081526020019060010190611829565b50505050905090565b60035460ff1615806118fa57506000546001600160a01b031633145b61190357600080fd5b6001600160a01b03821633141561195c5760405162461bcd60e51b815260206004820152601c60248201527f547279696e6720746f20617070726f7665207468652063616c6c657200000000604482015260640161076b565b336000818152600c602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b3360009081526001602081905260409091205460ff16151514806119f657506000546001600160a01b031633145b611a125760405162461bcd60e51b815260040161076b906131eb565b60035460ff161580611a2e57506000546001600160a01b031633145b611a3757600080fd5b600160156000828254611a4a91906132f9565b909155505060155460009081526016602090815260409091208551611a71928701906128d3565b5060155460009081526016602090815260409091208451611a9a926001909201918601906128d3565b5060155460009081526016602090815260409091208351611ac3926002909201918501906128d3565b5060155460009081526016602090815260409091208251611aec926003909201918401906128d3565b5050505050565b600f546001600160a01b03163314611b0a57600080fd5b600f5481906001600160a01b0316611b218261156b565b6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611b68611b628261156b565b8261256e565b600f5461040f906001600160a01b0316826124c2565b611b883384612292565b611ba45760405162461bcd60e51b815260040161076b9061319e565b611aec858585612324565b3360009081526001602081905260409091205460ff1615151480611bdd57506000546001600160a01b031633145b611bf95760405162461bcd60e51b815260040161076b906131eb565b60035460ff161580611c1557506000546001600160a01b031633145b611c1e57600080fd5b60008581526016602090815260409091208551611c3d928701906128d3565b5060008581526016602090815260409091208451611c63926001909201918601906128d3565b5060008581526016602090815260409091208351611c89926002909201918501906128d3565b5060008581526016602090815260409091208251611caf926003909201918401906128d3565b50846015541015611aec5760158590555050505050565b6060600280548060200260200160405190810160405280929190818152602001828054801561072d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611d00575050505050905090565b6000818152600960205260409020546060906001600160a01b0316611d5e5760405162461bcd60e51b815260040161076b9061321a565b6014611d6983612718565b604051602001611d7a929190613009565b6040516020818303038152906040529050919050565b6000546001600160a01b03163314611dba5760405162461bcd60e51b815260040161076b90613167565b6001600160a01b031660008181526001602081905260408220805460ff1916821790556002805491820181559091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319169091179055565b6000546001600160a01b03163314611e485760405162461bcd60e51b815260040161076b90613167565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6001600160a01b039182166000908152600c6020908152604080832093909416825291909152205460ff1690565b6000546001600160a01b03163314611ec15760405162461bcd60e51b815260040161076b90613167565b6001600160a01b038116611f175760405162461bcd60e51b815260206004820152601d60248201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604482015260640161076b565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082019091526000815260606020820152611f796040518060800160405280606081526020016060815260200160608152602001606081525090565b6000838152600960205260409020546001600160a01b0316611fad5760405162461bcd60e51b815260040161076b9061321a565b6000838152601760209081526040808320805480855260168452938290208251808401845294855260018201805484518187028101870190955280855292959194919386938584019391929183018282801561202857602002820191906000526020600020905b815481526020019060010190808311612014575b50505050508152505091508060405180608001604052908160008201805461204f90613368565b80601f016020809104026020016040519081016040528092919081815260200182805461207b90613368565b80156120c85780601f1061209d576101008083540402835291602001916120c8565b820191906000526020600020905b8154815290600101906020018083116120ab57829003601f168201915b505050505081526020016001820180546120e190613368565b80601f016020809104026020016040519081016040528092919081815260200182805461210d90613368565b801561215a5780601f1061212f5761010080835404028352916020019161215a565b820191906000526020600020905b81548152906001019060200180831161213d57829003601f168201915b5050505050815260200160028201805461217390613368565b80601f016020809104026020016040519081016040528092919081815260200182805461219f90613368565b80156121ec5780601f106121c1576101008083540402835291602001916121ec565b820191906000526020600020905b8154815290600101906020018083116121cf57829003601f168201915b5050505050815260200160038201805461220590613368565b80601f016020809104026020016040519081016040528092919081815260200182805461223190613368565b801561227e5780601f106122535761010080835404028352916020019161227e565b820191906000526020600020905b81548152906001019060200180831161226157829003601f168201915b505050505081525050905091509150915091565b6000818152600960205260408120546001600160a01b03166122c65760405162461bcd60e51b815260040161076b9061321a565b60006122d18361156b565b9050806001600160a01b0316846001600160a01b0316148061230c5750836001600160a01b031661230184610737565b6001600160a01b0316145b8061231c575061231c8185611e69565b949350505050565b60035460ff16158061234057506000546001600160a01b031633145b61234957600080fd5b826001600160a01b031661235c8261156b565b6001600160a01b0316146123be5760405162461bcd60e51b815260206004820152602360248201527f5472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776044820152621b995960ea1b606482015260840161076b565b6001600160a01b0382166124145760405162461bcd60e51b815260206004820152601c60248201527f5472616e7366657220746f20746865207a65726f206164647265737300000000604482015260640161076b565b61241f838383610de6565b1561245d5760405162461bcd60e51b815260206004820152600e60248201526d10d85c99081a5cc818985b9b995960921b604482015260640161076b565b612468600082610790565b612472838261256e565b61247c82826124c2565b80826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000818152600960205260409020546001600160a01b0316156124e457600080fd5b600081815260096020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600b909152902054612526906001612831565b6001600160a01b039092166000908152600b60209081526040808320949094556007815283822080546001810182559083528183208101849055928252600890529190912055565b816001600160a01b03166125818261156b565b6001600160a01b03161461259457600080fd5b6001600160a01b0382166000908152600b60205260409020546125b890600161285e565b6001600160a01b0383166000818152600b60209081526040808320949094558482526009815283822080546001600160a01b03191690556008815283822054928252600790529182205490919061261090600161285e565b6001600160a01b0385166000908152600760205260408120805492935090918390811061264d57634e487b7160e01b600052603260045260246000fd5b906000526020600020015490508060076000876001600160a01b03166001600160a01b03168152602001908152602001600020848154811061269f57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092556001600160a01b03871681526007909152604090208054806126e257634e487b7160e01b600052603160045260246000fd5b60008281526020808220830160001990810183905590920190925594815260089094526040808520859055908452909220555050565b60608161273c5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156127665780612750816133a3565b915061275f9050600a83613311565b9150612740565b6000816001600160401b0381111561278e57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156127b8576020820181803683370190505b5090505b841561231c576127cd600183613325565b91506127da600a866133be565b6127e59060306132f9565b60f81b81838151811061280857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061282a600a86613311565b94506127bc565b60008061283e83856132f9565b905083811015610fe857634e487b7160e01b600052600160045260246000fd5b60008282111561287e57634e487b7160e01b600052600160045260246000fd5b610fe88284613325565b8280548282559060005260206000209081019282156128c3579160200282015b828111156128c35782518255916020019190600101906128a8565b506128cf929150612946565b5090565b8280546128df90613368565b90600052602060002090601f01602090048101928261290157600085556128c3565b82601f1061291a57805160ff19168380011785556128c3565b828001600101855582156128c357918201828111156128c35782518255916020019190600101906128a8565b5b808211156128cf5760008155600101612947565b80356001600160a01b038116811461297257600080fd5b919050565b600082601f830112612987578081fd5b813560206001600160401b038211156129a2576129a26133fe565b8160051b6129b18282016132c9565b8381528281019086840183880185018910156129cb578687fd5b8693505b858410156129ed5780358352600193909301929184019184016129cf565b50979650505050505050565b600082601f830112612a09578081fd5b81356001600160401b03811115612a2257612a226133fe565b612a35601f8201601f19166020016132c9565b818152846020838601011115612a49578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215612a74578081fd5b610fe88261295b565b60008060408385031215612a8f578081fd5b612a988361295b565b9150612aa66020840161295b565b90509250929050565b600080600060608486031215612ac3578081fd5b612acc8461295b565b9250612ada6020850161295b565b9150604084013590509250925092565b600080600080600060808688031215612b01578081fd5b612b0a8661295b565b9450612b186020870161295b565b93506040860135925060608601356001600160401b0380821115612b3a578283fd5b818801915088601f830112612b4d578283fd5b813581811115612b5b578384fd5b896020828501011115612b6c578384fd5b9699959850939650602001949392505050565b60008060408385031215612b91578182fd5b612b9a8361295b565b91506020830135612baa81613414565b809150509250929050565b60008060408385031215612bc7578182fd5b612bd08361295b565b946020939093013593505050565b600060208284031215612bef578081fd5b81356001600160401b03811115612c04578182fd5b61231c84828501612977565b60008060408385031215612c22578182fd5b82356001600160401b0380821115612c38578384fd5b612c4486838701612977565b93506020850135915080821115612c59578283fd5b50612c6685828601612977565b9150509250929050565b600080600060608486031215612c84578283fd5b83356001600160401b0380821115612c9a578485fd5b612ca687838801612977565b94506020860135915080821115612cbb578384fd5b612cc787838801612977565b93506040860135915080821115612cdc578283fd5b50612ce986828701612977565b9150509250925092565b600060208284031215612d04578081fd5b8151610fe881613414565b600060208284031215612d20578081fd5b81356001600160e01b031981168114610fe8578182fd5b600060208284031215612d48578081fd5b81356001600160401b03811115612d5d578182fd5b61231c848285016129f9565b60008060008060808587031215612d7e578081fd5b84356001600160401b0380821115612d94578283fd5b612da0888389016129f9565b95506020870135915080821115612db5578283fd5b612dc1888389016129f9565b94506040870135915080821115612dd6578283fd5b612de2888389016129f9565b93506060870135915080821115612df7578283fd5b50612e04878288016129f9565b91505092959194509250565b600060208284031215612e21578081fd5b5035919050565b60008060408385031215612e3a578182fd5b8235915060208301356001600160401b03811115612e56578182fd5b612c6685828601612977565b600080600080600060a08688031215612e79578283fd5b8535945060208601356001600160401b0380821115612e96578485fd5b612ea289838a016129f9565b95506040880135915080821115612eb7578485fd5b612ec389838a016129f9565b94506060880135915080821115612ed8578283fd5b612ee489838a016129f9565b93506080880135915080821115612ef9578283fd5b50612f06888289016129f9565b9150509295509295909350565b600080600060608486031215612f27578081fd5b833592506020840135915060408401356001600160401b03811115612f4a578182fd5b612ce986828701612977565b60008151808452612f6e81602086016020860161333c565b601f01601f19169290920160200192915050565b60008151612f9481856020860161333c565b9290920192915050565b6000815160808452612fb36080850182612f56565b905060208301518482036020860152612fcc8282612f56565b91505060408301518482036040860152612fe68282612f56565b915050606083015184820360608601526130008282612f56565b95945050505050565b600080845482600182811c91508083168061302557607f831692505b602080841082141561304557634e487b7160e01b87526022600452602487fd5b818015613059576001811461306a57613096565b60ff19861689528489019650613096565b60008b815260209020885b8681101561308e5781548b820152908501908301613075565b505084890196505b5050505050506130008185612f82565b6020808252825182820181905260009190848201906040850190845b818110156130e75783516001600160a01b0316835292840192918401916001016130c2565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b8281101561314757603f19888603018452613135858351612f56565b94509285019290850190600101613119565b5092979650505050505050565b602081526000610fe86020830184612f56565b60208082526017908201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b6020808252602d908201527f5472616e736665722063616c6c6572206973206e656974686572206f776e657260408201526c081b9bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526015908201527410d85b1b195c881a5cc81b9bdd081d1c9d5cdd1959605a1b604082015260600190565b6020808252601190820152702737b732bc34b9ba32b73a103a37b5b2b760791b604082015260600190565b60408152600060808201845160408401526020808601516040606086015282815180855260a08701915083830194508592505b808310156132985784518252938301936001929092019190830190613278565b50858103838701526132aa8188612f9e565b98975050505050505050565b602081526000610fe86020830184612f9e565b604051601f8201601f191681016001600160401b03811182821017156132f1576132f16133fe565b604052919050565b6000821982111561330c5761330c6133d2565b500190565b600082613320576133206133e8565b500490565b600082821015613337576133376133d2565b500390565b60005b8381101561335757818101518382015260200161333f565b83811115610a595750506000910152565b600181811c9082168061337c57607f821691505b6020821081141561339d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156133b7576133b76133d2565b5060010190565b6000826133cd576133cd6133e8565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461040f57600080fdfea2646970667358221220892cc588ef767841ff8121cdaa6332a05d64b9e8edeab3efaebd3f5dc419b66764736f6c63430008040033";

type BinamonCollectionV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BinamonCollectionV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BinamonCollectionV2__factory extends ContractFactory {
  constructor(...args: BinamonCollectionV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BinamonCollectionV2";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BinamonCollectionV2> {
    return super.deploy(overrides || {}) as Promise<BinamonCollectionV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BinamonCollectionV2 {
    return super.attach(address) as BinamonCollectionV2;
  }
  connect(signer: Signer): BinamonCollectionV2__factory {
    return super.connect(signer) as BinamonCollectionV2__factory;
  }
  static readonly contractName: "BinamonCollectionV2";
  public readonly contractName: "BinamonCollectionV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BinamonCollectionV2Interface {
    return new utils.Interface(_abi) as BinamonCollectionV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BinamonCollectionV2 {
    return new Contract(address, _abi, signerOrProvider) as BinamonCollectionV2;
  }
}
