/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Pausable, PausableInterface } from "../Pausable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addTrusted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDelegates",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isTrusted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeTrusted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526003805460ff1916905534801561001a57600080fd5b50600080546001600160a01b031916331790556104e78061003c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806396d648791161006657806396d64879146100e7578063c838ccb614610113578063d4d0d6e614610128578063d55e62a01461013b578063f2fde38b1461014e57600080fd5b80633f4ba83a146100985780635c975abb146100a25780638456cb59146100c45780638da5cb5b146100cc575b600080fd5b6100a0610161565b005b6003546100af9060ff1681565b60405190151581526020015b60405180910390f35b6100a06101c4565b6000546040516001600160a01b0390911681526020016100bb565b6100af6100f53660046103ff565b6001600160a01b031660009081526001602052604090205460ff1690565b61011b610222565b6040516100bb919061042d565b6100a06101363660046103ff565b610284565b6100a06101493660046103ff565b610312565b6100a061015c3660046103ff565b61035d565b6000546001600160a01b031633146101945760405162461bcd60e51b815260040161018b9061047a565b60405180910390fd5b60035460ff16806101af57506000546001600160a01b031633145b6101b857600080fd5b6003805460ff19169055565b6000546001600160a01b031633146101ee5760405162461bcd60e51b815260040161018b9061047a565b60035460ff16158061020a57506000546001600160a01b031633145b61021357600080fd5b6003805460ff19166001179055565b6060600280548060200260200160405190810160405280929190818152602001828054801561027a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161025c575b5050505050905090565b6000546001600160a01b031633146102ae5760405162461bcd60e51b815260040161018b9061047a565b6001600160a01b031660008181526001602081905260408220805460ff1916821790556002805491820181559091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319169091179055565b6000546001600160a01b0316331461033c5760405162461bcd60e51b815260040161018b9061047a565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b031633146103875760405162461bcd60e51b815260040161018b9061047a565b6001600160a01b0381166103dd5760405162461bcd60e51b815260206004820152601d60248201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604482015260640161018b565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600060208284031215610410578081fd5b81356001600160a01b0381168114610426578182fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561046e5783516001600160a01b031683529284019291840191600101610449565b50909695505050505050565b60208082526017908201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060408201526060019056fea26469706673582212209046a7466c3d7a3a33b0b9950e4de27dfe3a36d896c0d45807c1d18f7f59d7a264736f6c63430008040033";

type PausableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PausableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pausable__factory extends ContractFactory {
  constructor(...args: PausableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Pausable";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Pausable> {
    return super.deploy(overrides || {}) as Promise<Pausable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Pausable {
    return super.attach(address) as Pausable;
  }
  connect(signer: Signer): Pausable__factory {
    return super.connect(signer) as Pausable__factory;
  }
  static readonly contractName: "Pausable";
  public readonly contractName: "Pausable";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PausableInterface {
    return new utils.Interface(_abi) as PausableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Pausable {
    return new Contract(address, _abi, signerOrProvider) as Pausable;
  }
}
